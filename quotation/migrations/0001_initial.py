# Generated by Django 5.1.4 on 2025-01-12 12:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='sales_customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('address', models.CharField(max_length=120)),
                ('mobile_no', models.IntegerField()),
                ('client_gst', models.CharField(max_length=120)),
                ('credit_limit', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contance_person_no', models.TextField(blank=True, null=True)),
                ('contact_no', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('reference_from', models.CharField(choices=[('Direct_Contact', 'Direct_Contact'), ('Webiste', 'Webiste'), ('Mailer', 'Mailer')], max_length=100)),
                ('industry', models.CharField(choices=[('automotive', 'automotive'), ('auto_ancillary', 'auto ancillary'), ('sugar', 'sugar'), ('domestic_appliance', 'domestic appliance'), ('process_equipmen', 'process equipmen'), ('petro_chemica', 'petro chemica'), ('food_equipmen', 'food equipmen'), ('medical_device_equipement', 'medical device & equipement'), ('defence', 'defence'), ('aviation_aero_space', 'aviation & aero space'), ('elevator', 'elevator'), ('electricals', 'electricals'), ('electronics', 'electronics'), ('filteration', 'filteration'), ('other', 'other')], max_length=100)),
                ('product', models.CharField(choices=[('nameplate', 'nameplate'), ('front_pannel', 'front pannel'), ('nameplate_with_qr_code', 'nameplate with qr code'), ('project_based_cable_tags', 'project based cable tags'), ('schematic_drg', 'schematic drg'), ('thin_shim_and_spacer', 'thin shim & spacer'), ('proto_type_stator_and_rotar_lamination', 'proto type stator & rotar lamination'), ('regular_thin_mesh', 'regular thin mesh'), ('customized_mesh', 'customized mesh'), ('encoder_disc', 'encoder disc'), ('aperture_and_pin_holes', 'aperture & pin holes'), ('texturing', 'texturing'), ('speaker_grill', 'speaker grill'), ('contact_connector_and_terminals', 'contact , connector & terminals'), ('valve_and_compressor_plate', 'valve & compressor plate'), ('diaphragm', 'diaphragm'), ('emi_rfi_shielding', 'emi / rfi shielding'), ('filteration', 'filteration'), ('battery_contact', 'battery contact'), ('antenna_tele_communication', 'antenna tele communication'), ('bipolar_plate_pem', 'bipolar plate pem'), ('flat_spring_u_spring_v_spring', 'flat spring, u spring, v spring'), ('metal_business_card_with_nfc_chip', 'metal business card with nfc chip'), ('metal_business_card_without_chip', 'metal business card without chip'), ('book_mark_and_product_model', 'book mark & product model'), ('designer_stainless_steel_sheet', 'designer stainless steel sheet'), ('designer_stainless_steel_sheet_with_elevator_cabinet', 'designer stainless steel sheet with elevator cabinet'), ('designer_stainless_steel_sheet_with_elevator_cabinet_roof_and_bottom', 'designer stainless steel sheet with elevator cabinet, roof & bottom'), ('other', 'other')], max_length=100)),
                ('file_format', models.CharField(choices=[('cdr', 'CDR'), ('dxf', 'DXF'), ('ai', 'A.I'), ('pdf', 'PDF'), ('excel', 'Excel')], max_length=100)),
                ('incoterm', models.CharField(choices=[('ex-works', 'Ex-Works'), ('f.o.b.', 'F.O.B.'), ('c_and_f', 'C & F'), ('cif', 'CIF'), ('warehouse_to_warehouse', 'Warehouse to Warehouse')], max_length=100)),
                ('transportation_type', models.CharField(choices=[('road', 'Road'), ('rail', 'Rail'), ('air', 'Air'), ('courier', 'Courier'), ('porter', 'Porter'), ('personal_pick_up', 'Personal Pick Up')], max_length=100)),
                ('transportation_cost', models.IntegerField()),
                ('payment', models.CharField(choices=[('advance', 'advance'), ('against_delivery', 'against_delivery'), ('proforma_invoice ', 'proforma_invoice'), ('credit_in_day ', 'credit_in_day')], max_length=100)),
                ('advance', models.IntegerField(blank=True, null=True)),
                ('credit_in_days', models.IntegerField(blank=True, null=True)),
                ('rejection_acceptance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=100)),
                ('offer_valid_date', models.DateField()),
                ('sudden_rise', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('sudden_rise_percent', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20')], max_length=100, null=True)),
                ('packaging', models.CharField(choices=[('paper', 'Paper'), ('plastic_bags', 'Plastic Bags'), ('corrugated_box', 'Corrugated Box'), ('wooden_box', 'Wooden Box')], max_length=100)),
                ('packaging_charges', models.IntegerField(choices=[(0, '0'), (100, '100'), (200, '200'), (300, '300'), (400, '400'), (500, '500'), (600, '600'), (700, '700'), (800, '800'), (900, '900'), (1000, '1000'), (1100, '1100'), (1200, '1200'), (1300, '1300'), (1400, '1400'), (1500, '1500'), (1600, '1600'), (1700, '1700'), (1800, '1800'), (1900, '1900'), (2000, '2000'), (2100, '2100'), (2200, '2200'), (2300, '2300'), (2400, '2400'), (2500, '2500'), (2600, '2600'), (2700, '2700'), (2800, '2800'), (2900, '2900'), (3000, '3000'), (3100, '3100'), (3200, '3200'), (3300, '3300'), (3400, '3400'), (3500, '3500'), (3600, '3600'), (3700, '3700'), (3800, '3800'), (3900, '3900'), (4000, '4000'), (4100, '4100'), (4200, '4200'), (4300, '4300'), (4400, '4400'), (4500, '4500'), (4600, '4600'), (4700, '4700'), (4800, '4800'), (4900, '4900'), (5000, '5000')])),
                ('total_sqinch', models.FloatField()),
                ('final_amount', models.FloatField()),
                ('is_approved', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotation.sales_customer')),
            ],
        ),
        migrations.CreateModel(
            name='order_child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.TextField()),
                ('material', models.CharField(choices=[('ss_304', 'ss_304'), ('ss_316', 'ss_316'), ('ss_316_L', 'ss_316_L'), ('aluminium_coil', 'aluminium_coil'), ('sheet_2S', 'sheet_2S'), ('brass', 'brass'), ('copper', 'copper'), ('mild_sheel', 'mild_sheel'), ('spring_sheel', 'spring_sheel'), ('nickel', 'nickel'), ('beryllium_copper', 'beryllium_copper'), ('trifoliate_sandwich', 'trifoliate_sandwich'), ('any_other_please_mention', 'any_other_please_mention')], max_length=50)),
                ('other_material', models.CharField(blank=True, max_length=50, null=True)),
                ('process', models.CharField(choices=[('chemical_etching', 'chemical_etching'), ('etching_laser_cutting', 'etching_laser_cutting'), ('etching_laser_engraving', 'etching_laser_engraving'), ('chemical_milling', 'chemical_milling'), ('anodic_print', 'anodic_print'), ('laser_cutting', 'laser_cutting'), ('laser_cutting_coating', 'laser_cutting_coating'), ('stamping', 'stamping'), ('injection_mould_texturing', 'injection_mould_texturing')], max_length=50)),
                ('text_matter', models.CharField(choices=[('standard_text_matter', 'standard_text_matter'), ('variable_text_matter', 'variable_text_matter')], max_length=50)),
                ('etching', models.CharField(choices=[('deep_etching', 'deep_etching'), ('embossed_etching', 'embossed_etching')], max_length=50)),
                ('color_count', models.CharField(choices=[('1', '1'), ('2', '2'), ('multi_color', 'multi_color')], max_length=50)),
                ('color', models.CharField(choices=[('black', 'black'), ('blue', 'blue'), ('red', 'red'), ('green', 'green'), ('yellow', 'yellow')], max_length=50)),
                ('font_height', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('above_8', 'above_8'), ('combination_of_1to8', 'combination_of_1to8')], max_length=50)),
                ('thickness', models.CharField(choices=[('0.1', '0.1'), ('0.2', '0.2'), ('0.3', '0.3'), ('0.4', '0.4'), ('0.5', '0.5'), ('0.6', '0.6'), ('0.7', '0.7'), ('0.8', '0.8'), ('0.9', '0.9'), ('1.0', '1.0'), ('1.2', '1.2'), ('1.5', '1.5'), ('2', '2'), ('2.5', '2.5'), ('3.0', '3.0')], max_length=50)),
                ('length', models.FloatField(blank=True, null=True)),
                ('total_sq_inch', models.FloatField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('rate', models.FloatField(blank=True, null=True)),
                ('rate_per_unit', models.FloatField(blank=True, null=True)),
                ('basic_amount', models.FloatField(blank=True, null=True)),
                ('charges_type_group', models.CharField(choices=[('with_gst', 'with_gst'), ('with_job_shop', 'with_job_shop')], max_length=50)),
                ('total_with_job_shop', models.FloatField(blank=True, null=True)),
                ('total_with_gst', models.FloatField(blank=True, null=True)),
                ('total_amount_with_charges_type', models.FloatField(blank=True, null=True)),
                ('flim_charges', models.CharField(choices=[('inclusive', 'inclusive'), ('sqinch', 'sqinch'), ('no_flim_charges', 'no_flim_charges')], max_length=50)),
                ('flim_sqinch', models.CharField(blank=True, max_length=50, null=True)),
                ('flim_charges_total', models.FloatField(blank=True, null=True)),
                ('sample', models.CharField(choices=[('Free_in_case_confirm_Order', 'Free_in_case_confirm_Order'), ('Extra_Charges_Rs', 'Extra_Charges_Rs'), ('no_charges', 'no_charges')], max_length=50)),
                ('sample_price', models.FloatField(blank=True, null=True)),
                ('certificate_cost', models.CharField(choices=[('Free_along_with_invoice', 'Free_along_with_invoice'), ('No_certification', 'No_certification'), ('Extra_Charges', 'Extra_Charges')], max_length=50)),
                ('certificate_price', models.FloatField(blank=True, null=True)),
                ('final_item_total', models.FloatField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fdthfh', to='quotation.order')),
            ],
        ),
    ]
